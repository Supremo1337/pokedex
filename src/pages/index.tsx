import Head from "next/head";
import SearchBar from "@/components/SearchBar";
import FilterOptions from "@/components/FilterOptions";
import CardPokemon from "@/components/CardPokemon";
import React, { useEffect, useState } from "react";
import axios from "axios";
import { Wrapper } from "@/components/CardPokemon/styles";

interface PokemonsProps {
  image: string;
  number: number;
  name: string;
}

export default function Home() {
  const [pokemons, setPokemons] = useState<any[]>();
  const [loading, setLoading] = useState(false);
  const [search, setSearch] = useState("");
  const [selectedType, setSelectedType] = useState({});

  useEffect(() => {
    getPokemons();
  }, []);

  const getPokemons = () => {
    setLoading(false);
    var endpoints = [];
    for (var i = 1; i < 49; i++) {
      endpoints.push(`https://pokeapi.co/api/v2/pokemon/${i}/`);
    }
    var response = axios
      .all(
        endpoints.map(
          async (endpoint) => await axios.get<PokemonsProps>(endpoint)
        )
      )
      .then((res) => {
        setPokemons(res);
        console.log(res);
        setLoading(true);
      });
    console.log(endpoints);
  };

  const pokemonFiltrado =
    pokemons?.filter(
      (pokemon) =>
        pokemon.data.name.includes(search.toLowerCase()) ||
        pokemon.data.id.toString().includes(search)
    ) || [];

  return (
    <>
      <Head>
        <title>Pok√©dex</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <SearchBar value={search} onChange={(e) => setSearch(e.target.value)} />
      <FilterOptions onChangeType={(e) => console.log(e.target.value)} />
      {loading ? (
        <>
          <Wrapper>
            {pokemonFiltrado.map((pokemon, index) => {
              return <CardPokemon key={index} pokemon={pokemon} />;
            })}
          </Wrapper>
        </>
      ) : (
        "loading..."
      )}
    </>
  );
}
